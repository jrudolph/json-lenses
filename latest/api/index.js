Index.PACKAGES = {"spray" : [], "spray.json" : [], "spray.json.lenses" : [{"name" : "spray.json.lenses.BasicRules", "trait" : "spray\/json\/lenses\/BasicRules.html", "kind" : "trait", "members_trait" : [{"label" : "appendToSb", "tail" : "(c: Char): (Context[Any]) => Unit", "member" : "spray.json.lenses.BasicRules.appendToSb", "link" : "spray\/json\/lenses\/BasicRules.html#appendToSb(c:Char):org.parboiled.Context[Any]=>Unit", "kind" : "def"}, {"label" : "WhiteSpace", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.WhiteSpace", "link" : "spray\/json\/lenses\/BasicRules.html#WhiteSpace:org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "HexDigit", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.HexDigit", "link" : "spray\/json\/lenses\/BasicRules.html#HexDigit:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Digit", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Digit", "link" : "spray\/json\/lenses\/BasicRules.html#Digit:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Digits", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Digits", "link" : "spray\/json\/lenses\/BasicRules.html#Digits:org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "Integer", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Integer", "link" : "spray\/json\/lenses\/BasicRules.html#Integer:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Exp", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Exp", "link" : "spray\/json\/lenses\/BasicRules.html#Exp:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Frac", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Frac", "link" : "spray\/json\/lenses\/BasicRules.html#Frac:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "JsonNumber", "tail" : "(): Rule1[JsNumber]", "member" : "spray.json.lenses.BasicRules.JsonNumber", "link" : "spray\/json\/lenses\/BasicRules.html#JsonNumber:org.parboiled.scala.rules.Rule1[spray.json.JsNumber]", "kind" : "def"}, {"label" : "Unicode", "tail" : "(): Rule1[Int]", "member" : "spray.json.lenses.BasicRules.Unicode", "link" : "spray\/json\/lenses\/BasicRules.html#Unicode:org.parboiled.scala.rules.Rule1[Int]", "kind" : "def"}, {"label" : "NormalChar", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.NormalChar", "link" : "spray\/json\/lenses\/BasicRules.html#NormalChar:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "EscapedChar", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.EscapedChar", "link" : "spray\/json\/lenses\/BasicRules.html#EscapedChar:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/BasicRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/BasicRules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/BasicRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/BasicRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/BasicRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/BasicRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/BasicRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/BasicRules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/BasicRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/BasicRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/BasicRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/BasicRules.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/BasicRules.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/BasicRules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/BasicRules.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/BasicRules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/BasicRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/BasicRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/BasicRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.ExtraImplicits", "object" : "spray\/json\/lenses\/ExtraImplicits$.html", "members_object" : [{"label" : "RichJsValue", "tail" : "", "member" : "spray.json.lenses.ExtraImplicits.RichJsValue", "link" : "spray\/json\/lenses\/ExtraImplicits.html#RichJsValueextendsAnyRef", "kind" : "trait"}, {"label" : "richString", "tail" : "(str: String): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richString", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#richString(str:String):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "richValue", "tail" : "(v: JsValue): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richValue", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#richValue(v:spray.json.JsValue):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/ExtraImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/ExtraImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/ExtraImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "richString", "tail" : "(str: String): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richString", "link" : "spray\/json\/lenses\/ExtraImplicits.html#richString(str:String):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "richValue", "tail" : "(v: JsValue): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richValue", "link" : "spray\/json\/lenses\/ExtraImplicits.html#richValue(v:spray.json.JsValue):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "RichJsValue", "tail" : "", "member" : "spray.json.lenses.ExtraImplicits.RichJsValue", "link" : "spray\/json\/lenses\/ExtraImplicits.html#RichJsValueextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/ExtraImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/ExtraImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/ExtraImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/ExtraImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/ExtraImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/ExtraImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/ExtraImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ExtraImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/ExtraImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/ExtraImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/ExtraImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/ExtraImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/ExtraImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/ExtraImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/ExtraImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/ExtraImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/ExtraImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.GetOrThrow", "shortDescription" : "", "members_case class" : [{"label" : "getOrThrow", "tail" : "(): B", "member" : "spray.json.lenses.GetOrThrow.getOrThrow", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#getOrThrow:B", "kind" : "def"}, {"member" : "spray.json.lenses.GetOrThrow#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Either[Throwable, B]", "member" : "spray.json.lenses.GetOrThrow.e", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#e:Either[Throwable,B]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/package$$GetOrThrow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "spray\/json\/lenses\/package$$GetOrThrow.html", "kind" : "case class"}, {"name" : "spray.json.lenses.Join", "object" : "spray\/json\/lenses\/Join$.html", "members_object" : [{"label" : "joinOptionWithSeq", "tail" : "(): Join[Option, Seq, Seq]", "member" : "spray.json.lenses.Join.joinOptionWithSeq", "link" : "spray\/json\/lenses\/Join$.html#joinOptionWithSeq:spray.json.lenses.Join[Option,Seq,Seq]", "kind" : "implicit def"}, {"label" : "joinOptionWithOption", "tail" : "(): Join[Option, Option, Option]", "member" : "spray.json.lenses.Join.joinOptionWithOption", "link" : "spray\/json\/lenses\/Join$.html#joinOptionWithOption:spray.json.lenses.Join[Option,Option,Option]", "kind" : "implicit def"}, {"label" : "joinWithOptionWithId", "tail" : "(): Join[Option, Id, Option]", "member" : "spray.json.lenses.Join.joinWithOptionWithId", "link" : "spray\/json\/lenses\/Join$.html#joinWithOptionWithId:spray.json.lenses.Join[Option,spray.json.lenses.Id,Option]", "kind" : "implicit def"}, {"label" : "joinWithScalar", "tail" : "(): Join[Id, M2, M2]", "member" : "spray.json.lenses.Join.joinWithScalar", "link" : "spray\/json\/lenses\/Join$.html#joinWithScalar[M2[_]]:spray.json.lenses.Join[spray.json.lenses.Id,M2,M2]", "kind" : "implicit def"}, {"label" : "joinWithSeq", "tail" : "(): Join[Seq, M2, Seq]", "member" : "spray.json.lenses.Join.joinWithSeq", "link" : "spray\/json\/lenses\/Join$.html#joinWithSeq[M2[_]]:spray.json.lenses.Join[Seq,M2,Seq]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(f: ((Ops[M1], Ops[M2])) => Ops[R]): Join[M1, M2, R]", "member" : "spray.json.lenses.Join.apply", "link" : "spray\/json\/lenses\/Join$.html#apply[M1[_],M2[_],R[_]](f:((spray.json.lenses.Ops[M1],spray.json.lenses.Ops[M2]))=>spray.json.lenses.Ops[R]):spray.json.lenses.Join[M1,M2,R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Join$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Join$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Join$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Join$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Join$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Join$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Join$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Join$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Join$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Join$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Join$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Join$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Join$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Join$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Join$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Join$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/Join.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Join.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Join.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Join.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Join.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Join.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Join.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Join.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Join.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Join.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Join.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Join.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Join.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Join.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Join.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Join.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Join.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Join.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(outer: Ops[M1], inner: Ops[M2]): Ops[R]", "member" : "spray.json.lenses.Join.get", "link" : "spray\/json\/lenses\/Join.html#get(outer:spray.json.lenses.Ops[M1],inner:spray.json.lenses.Ops[M2]):spray.json.lenses.Ops[R]", "kind" : "abstract def"}], "shortDescription" : "This typeclass with its implicit instances decides how two containers should be joined."}, {"name" : "spray.json.lenses.JsonLenses", "shortDescription" : "An aggregate option to import all of the functionality of JsonLenses with oneimport.", "object" : "spray\/json\/lenses\/JsonLenses$.html", "members_object" : [{"label" : "RichJsValue", "tail" : "", "member" : "spray.json.lenses.ExtraImplicits.RichJsValue", "link" : "spray\/json\/lenses\/ExtraImplicits.html#RichJsValueextendsAnyRef", "kind" : "trait"}, {"label" : "MapOperation", "tail" : "", "member" : "spray.json.lenses.Operations.MapOperation", "link" : "spray\/json\/lenses\/Operations.html#MapOperationextendsspray.json.lenses.Operation", "kind" : "trait"}, {"label" : "combine", "tail" : "(outer: Lens[M], inner: Lens[M2])(ev: Join[M2, M, R]): Lens[R]", "member" : "spray.json.lenses.JsonLenses.combine", "link" : "spray\/json\/lenses\/JsonLenses$.html#combine[M[_],M2[_],R[_]](outer:spray.json.lenses.Lens[M],inner:spray.json.lenses.Lens[M2])(implicitev:spray.json.lenses.Join[M2,M,R]):spray.json.lenses.Lens[R]", "kind" : "def"}, {"label" : "strToPossiblyOptionalField", "tail" : "(sym: Symbol): OptionalFieldBuilder", "member" : "spray.json.lenses.JsonLenses.strToPossiblyOptionalField", "link" : "spray\/json\/lenses\/JsonLenses$.html#strToPossiblyOptionalField(sym:Symbol):spray.json.lenses.JsonLenses.OptionalFieldBuilder", "kind" : "implicit def"}, {"label" : "strToPossiblyOptionalField", "tail" : "(name: String): OptionalFieldBuilder", "member" : "spray.json.lenses.JsonLenses.strToPossiblyOptionalField", "link" : "spray\/json\/lenses\/JsonLenses$.html#strToPossiblyOptionalField(name:String):spray.json.lenses.JsonLenses.OptionalFieldBuilder", "kind" : "implicit def"}, {"label" : "symbolToField", "tail" : "(sym: Symbol): ScalarLens", "member" : "spray.json.lenses.JsonLenses.symbolToField", "link" : "spray\/json\/lenses\/JsonLenses$.html#symbolToField(sym:Symbol):spray.json.lenses.ScalarLens", "kind" : "implicit def"}, {"label" : "strToField", "tail" : "(name: String): ScalarLens", "member" : "spray.json.lenses.JsonLenses.strToField", "link" : "spray\/json\/lenses\/JsonLenses$.html#strToField(name:String):spray.json.lenses.ScalarLens", "kind" : "implicit def"}, {"label" : "OptionalFieldBuilder", "tail" : "", "member" : "spray.json.lenses.JsonLenses.OptionalFieldBuilder", "link" : "spray\/json\/lenses\/JsonLenses$.html#OptionalFieldBuilderextendsAnyRef", "kind" : "class"}, {"label" : "richString", "tail" : "(str: String): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richString", "link" : "spray\/json\/lenses\/JsonLenses$.html#richString(str:String):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "richValue", "tail" : "(v: JsValue): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richValue", "link" : "spray\/json\/lenses\/JsonLenses$.html#richValue(v:spray.json.JsValue):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "fromPath", "tail" : "(ast: Path): Lens[Seq]", "member" : "spray.json.lenses.JsonPathIntegration.fromPath", "link" : "spray\/json\/lenses\/JsonLenses$.html#fromPath(ast:spray.json.lenses.JsonPath.Path):spray.json.lenses.Lens[Seq]", "kind" : "def"}, {"label" : "fromPath", "tail" : "(path: String): Lens[Seq]", "member" : "spray.json.lenses.JsonPathIntegration.fromPath", "link" : "spray\/json\/lenses\/JsonLenses$.html#fromPath(path:String):spray.json.lenses.Lens[Seq]", "kind" : "def"}, {"label" : "extract", "tail" : "(value: Lens[M])(f: (M[T]) => Update): Operation", "member" : "spray.json.lenses.Operations.extract", "link" : "spray\/json\/lenses\/JsonLenses$.html#extract[M[_],T](value:spray.json.lenses.Lens[M])(f:M[T]=>spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "update", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.update", "link" : "spray\/json\/lenses\/JsonLenses$.html#update(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "append", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.append", "link" : "spray\/json\/lenses\/JsonLenses$.html#append(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.modify", "link" : "spray\/json\/lenses\/JsonLenses$.html#modify[T](f:T=>T)(implicitevidence$2:spray.json.lenses.Reader[T],implicitevidence$3:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "set", "tail" : "(t: => T)(arg0: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.set", "link" : "spray\/json\/lenses\/JsonLenses$.html#set[T](t:=>T)(implicitevidence$1:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "updateOptionalField", "tail" : "(f: (Option[T]) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.updateOptionalField", "link" : "spray\/json\/lenses\/JsonLenses$.html#updateOptionalField[T](f:Option[T]=>Option[T])(implicitevidence$5:spray.json.lenses.Reader[T],implicitevidence$6:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modifyOrDeleteField", "tail" : "(f: (T) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.modifyOrDeleteField", "link" : "spray\/json\/lenses\/JsonLenses$.html#modifyOrDeleteField[T](f:T=>Option[T])(implicitevidence$3:spray.json.lenses.Reader[T],implicitevidence$4:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "setOrUpdateField", "tail" : "(default: => T)(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.setOrUpdateField", "link" : "spray\/json\/lenses\/JsonLenses$.html#setOrUpdateField[T](default:=>T)(f:T=>T)(implicitevidence$1:spray.json.lenses.Reader[T],implicitevidence$2:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: JsPred): SeqLens", "member" : "spray.json.lenses.SeqLenses.filter", "link" : "spray\/json\/lenses\/JsonLenses$.html#filter(pred:spray.json.lenses.JsPred):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "*", "tail" : "(): SeqLens", "member" : "spray.json.lenses.SeqLenses.*", "link" : "spray\/json\/lenses\/JsonLenses$.html#*:spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "allMatching", "tail" : "(inner: Lens[M]): SeqLens", "member" : "spray.json.lenses.SeqLenses.allMatching", "link" : "spray\/json\/lenses\/JsonLenses$.html#allMatching[M[_]](inner:spray.json.lenses.Lens[M]):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.elements", "link" : "spray\/json\/lenses\/JsonLenses$.html#elements:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "asSeq", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.asSeq", "link" : "spray\/json\/lenses\/JsonLenses$.html#asSeq:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "optionalField", "tail" : "(name: String): OptLens", "member" : "spray.json.lenses.OptionLenses.optionalField", "link" : "spray\/json\/lenses\/JsonLenses$.html#optionalField(name:String):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "find", "tail" : "(pred: JsPred): OptLens", "member" : "spray.json.lenses.OptionLenses.find", "link" : "spray\/json\/lenses\/JsonLenses$.html#find(pred:spray.json.lenses.JsPred):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "arrayOrSingletonAsArray", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.arrayOrSingletonAsArray", "link" : "spray\/json\/lenses\/JsonLenses$.html#arrayOrSingletonAsArray:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "value", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.value", "link" : "spray\/json\/lenses\/JsonLenses$.html#value:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "element", "tail" : "(idx: Int): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.element", "link" : "spray\/json\/lenses\/JsonLenses$.html#element(idx:Int):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "field", "tail" : "(name: String): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.field", "link" : "spray\/json\/lenses\/JsonLenses$.html#field(name:String):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/JsonLenses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/JsonLenses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/JsonLenses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/JsonLenses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/JsonLenses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/JsonLenses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/JsonLenses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonLenses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonLenses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonLenses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/JsonLenses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/JsonLenses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/JsonLenses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/JsonLenses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/JsonLenses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/JsonLenses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/JsonLenses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/JsonLenses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/JsonLenses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "spray.json.lenses.JsonPath", "shortDescription" : "The AST for a json-path.", "object" : "spray\/json\/lenses\/JsonPath$.html", "members_object" : [{"label" : "Constant", "tail" : "", "member" : "spray.json.lenses.JsonPath.Constant", "link" : "spray\/json\/lenses\/JsonPath$.html#ConstantextendsJsonPath.SimpleExprwithProductwithSerializable", "kind" : "case class"}, {"label" : "PathExpr", "tail" : "", "member" : "spray.json.lenses.JsonPath.PathExpr", "link" : "spray\/json\/lenses\/JsonPath$.html#PathExprextendsJsonPath.ExprwithProductwithSerializable", "kind" : "case class"}, {"label" : "SimpleExpr", "tail" : "", "member" : "spray.json.lenses.JsonPath.SimpleExpr", "link" : "spray\/json\/lenses\/JsonPath$.html#SimpleExprextendsJsonPath.Expr", "kind" : "sealed trait"}, {"label" : "Expr", "tail" : "", "member" : "spray.json.lenses.JsonPath.Expr", "link" : "spray\/json\/lenses\/JsonPath$.html#ExprextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Exists", "tail" : "", "member" : "spray.json.lenses.JsonPath.Exists", "link" : "spray\/json\/lenses\/JsonPath$.html#ExistsextendsJsonPath.PredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Gt", "tail" : "", "member" : "spray.json.lenses.JsonPath.Gt", "link" : "spray\/json\/lenses\/JsonPath$.html#GtextendsJsonPath.BinOpPredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Lt", "tail" : "", "member" : "spray.json.lenses.JsonPath.Lt", "link" : "spray\/json\/lenses\/JsonPath$.html#LtextendsJsonPath.BinOpPredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Eq", "tail" : "", "member" : "spray.json.lenses.JsonPath.Eq", "link" : "spray\/json\/lenses\/JsonPath$.html#EqextendsJsonPath.BinOpPredicatewithProductwithSerializable", "kind" : "case class"}, {"label" : "BinOpPredicate", "tail" : "", "member" : "spray.json.lenses.JsonPath.BinOpPredicate", "link" : "spray\/json\/lenses\/JsonPath$.html#BinOpPredicateextendsJsonPath.Predicate", "kind" : "sealed trait"}, {"label" : "Predicate", "tail" : "", "member" : "spray.json.lenses.JsonPath.Predicate", "link" : "spray\/json\/lenses\/JsonPath$.html#PredicateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ByPredicate", "tail" : "", "member" : "spray.json.lenses.JsonPath.ByPredicate", "link" : "spray\/json\/lenses\/JsonPath$.html#ByPredicateextendsJsonPath.ProjectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ByIndex", "tail" : "", "member" : "spray.json.lenses.JsonPath.ByIndex", "link" : "spray\/json\/lenses\/JsonPath$.html#ByIndexextendsJsonPath.ProjectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ByField", "tail" : "", "member" : "spray.json.lenses.JsonPath.ByField", "link" : "spray\/json\/lenses\/JsonPath$.html#ByFieldextendsJsonPath.ProjectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "AllElements", "tail" : "", "member" : "spray.json.lenses.JsonPath.AllElements", "link" : "spray\/json\/lenses\/JsonPath$.html#AllElements", "kind" : "object"}, {"label" : "Projection", "tail" : "", "member" : "spray.json.lenses.JsonPath.Projection", "link" : "spray\/json\/lenses\/JsonPath$.html#ProjectionextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Selection", "tail" : "", "member" : "spray.json.lenses.JsonPath.Selection", "link" : "spray\/json\/lenses\/JsonPath$.html#SelectionextendsJsonPath.PathwithProductwithSerializable", "kind" : "case class"}, {"label" : "Root", "tail" : "", "member" : "spray.json.lenses.JsonPath.Root", "link" : "spray\/json\/lenses\/JsonPath$.html#Root", "kind" : "object"}, {"label" : "Path", "tail" : "", "member" : "spray.json.lenses.JsonPath.Path", "link" : "spray\/json\/lenses\/JsonPath$.html#PathextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/JsonPath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/JsonPath$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/JsonPath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/JsonPath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/JsonPath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/JsonPath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/JsonPath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPath$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/JsonPath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/JsonPath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/JsonPath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/JsonPath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/JsonPath$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/JsonPath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/JsonPath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/JsonPath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/JsonPath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "spray.json.lenses.JsonPathIntegration", "trait" : "spray\/json\/lenses\/JsonPathIntegration.html", "kind" : "trait", "members_trait" : [{"label" : "fromPath", "tail" : "(ast: Path): Lens[Seq]", "member" : "spray.json.lenses.JsonPathIntegration.fromPath", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#fromPath(ast:spray.json.lenses.JsonPath.Path):spray.json.lenses.Lens[Seq]", "kind" : "def"}, {"label" : "fromPath", "tail" : "(path: String): Lens[Seq]", "member" : "spray.json.lenses.JsonPathIntegration.fromPath", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#fromPath(path:String):spray.json.lenses.Lens[Seq]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/JsonPathIntegration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/JsonPathIntegration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.JsonPathParser", "shortDescription" : "A parser for json-path expression as specified here:http:\/\/goessner.net\/articles\/JsonPath\/", "object" : "spray\/json\/lenses\/JsonPathParser$.html", "members_object" : [{"label" : "apply", "tail" : "(path: Array[Char]): Path", "member" : "spray.json.lenses.JsonPathParser.apply", "link" : "spray\/json\/lenses\/JsonPathParser$.html#apply(path:Array[Char]):spray.json.lenses.JsonPath.Path", "kind" : "def"}, {"label" : "apply", "tail" : "(path: String): Path", "member" : "spray.json.lenses.JsonPathParser.apply", "link" : "spray\/json\/lenses\/JsonPathParser$.html#apply(path:String):spray.json.lenses.JsonPath.Path", "kind" : "def"}, {"label" : "SingleQuotedString", "tail" : "(): Rule1[String]", "member" : "spray.json.lenses.JsonPathParser.SingleQuotedString", "link" : "spray\/json\/lenses\/JsonPathParser$.html#SingleQuotedString:org.parboiled.scala.Rule1[String]", "kind" : "def"}, {"label" : "FieldName", "tail" : "(): Rule1[String]", "member" : "spray.json.lenses.JsonPathParser.FieldName", "link" : "spray\/json\/lenses\/JsonPathParser$.html#FieldName:org.parboiled.scala.Rule1[String]", "kind" : "def"}, {"label" : "WhiteSpaceChars", "tail" : ": String", "member" : "spray.json.lenses.JsonPathParser.WhiteSpaceChars", "link" : "spray\/json\/lenses\/JsonPathParser$.html#WhiteSpaceChars:String", "kind" : "val"}, {"label" : "JsConstant", "tail" : "(): Rule1[JsValue]", "member" : "spray.json.lenses.JsonPathParser.JsConstant", "link" : "spray\/json\/lenses\/JsonPathParser$.html#JsConstant:org.parboiled.scala.Rule1[spray.json.JsValue]", "kind" : "def"}, {"label" : "SimpleExpr", "tail" : "(): Rule1[SimpleExpr]", "member" : "spray.json.lenses.JsonPathParser.SimpleExpr", "link" : "spray\/json\/lenses\/JsonPathParser$.html#SimpleExpr:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.SimpleExpr]", "kind" : "def"}, {"label" : "Expr", "tail" : "(): Rule1[Expr]", "member" : "spray.json.lenses.JsonPathParser.Expr", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Expr:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Expr]", "kind" : "def"}, {"label" : "op", "tail" : "(op: String)(cons: (Expr, SimpleExpr) => T): Rule1[T]", "member" : "spray.json.lenses.JsonPathParser.op", "link" : "spray\/json\/lenses\/JsonPathParser$.html#op[T](op:String)(cons:(spray.json.lenses.JsonPath.Expr,spray.json.lenses.JsonPath.SimpleExpr)=>T):org.parboiled.scala.rules.Rule1[T]", "kind" : "def"}, {"label" : "Exists", "tail" : "(): Rule1[Exists]", "member" : "spray.json.lenses.JsonPathParser.Exists", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Exists:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Exists]", "kind" : "def"}, {"label" : "Gt", "tail" : "(): Rule1[Gt]", "member" : "spray.json.lenses.JsonPathParser.Gt", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Gt:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Gt]", "kind" : "def"}, {"label" : "Lt", "tail" : "(): Rule1[Lt]", "member" : "spray.json.lenses.JsonPathParser.Lt", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Lt:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Lt]", "kind" : "def"}, {"label" : "Eq", "tail" : "(): Rule1[Eq]", "member" : "spray.json.lenses.JsonPathParser.Eq", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Eq:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Eq]", "kind" : "def"}, {"label" : "Predicate", "tail" : "(): Rule1[Predicate]", "member" : "spray.json.lenses.JsonPathParser.Predicate", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Predicate:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Predicate]", "kind" : "def"}, {"label" : "BracketProjection", "tail" : "(): Rule1[Projection]", "member" : "spray.json.lenses.JsonPathParser.BracketProjection", "link" : "spray\/json\/lenses\/JsonPathParser$.html#BracketProjection:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Projection]", "kind" : "def"}, {"label" : "ByFieldName", "tail" : "(): Rule1[ByField]", "member" : "spray.json.lenses.JsonPathParser.ByFieldName", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ByFieldName:org.parboiled.scala.rules.Rule1[spray.json.lenses.JsonPath.ByField]", "kind" : "def"}, {"label" : "AllElements", "tail" : "(): Rule1[JsonPath.AllElements.type]", "member" : "spray.json.lenses.JsonPathParser.AllElements", "link" : "spray\/json\/lenses\/JsonPathParser$.html#AllElements:org.parboiled.scala.rules.Rule1[spray.json.lenses.JsonPath.AllElements.type]", "kind" : "def"}, {"label" : "DotProjection", "tail" : "(): Rule1[Projection]", "member" : "spray.json.lenses.JsonPathParser.DotProjection", "link" : "spray\/json\/lenses\/JsonPathParser$.html#DotProjection:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Projection]", "kind" : "def"}, {"label" : "Projection", "tail" : "(): Rule1[Projection]", "member" : "spray.json.lenses.JsonPathParser.Projection", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Projection:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Projection]", "kind" : "def"}, {"label" : "OptionalSelection", "tail" : "(): ReductionRule1[Path, Path]", "member" : "spray.json.lenses.JsonPathParser.OptionalSelection", "link" : "spray\/json\/lenses\/JsonPathParser$.html#OptionalSelection:org.parboiled.scala.ReductionRule1[spray.json.lenses.JsonPath.Path,spray.json.lenses.JsonPath.Path]", "kind" : "def"}, {"label" : "Root", "tail" : "(): Rule1[JsonPath.Root.type]", "member" : "spray.json.lenses.JsonPathParser.Root", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Root:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Root.type]", "kind" : "def"}, {"label" : "Path", "tail" : "(): Rule1[Path]", "member" : "spray.json.lenses.JsonPathParser.Path", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Path:org.parboiled.scala.Rule1[spray.json.lenses.JsonPath.Path]", "kind" : "def"}, {"label" : "JsonPathExpr", "tail" : "(): Rule1[Path]", "member" : "spray.json.lenses.JsonPathParser.JsonPathExpr", "link" : "spray\/json\/lenses\/JsonPathParser$.html#JsonPathExpr:org.parboiled.scala.rules.Rule1[spray.json.lenses.JsonPath.Path]", "kind" : "def"}, {"label" : "appendToSb", "tail" : "(c: Char): (Context[Any]) => Unit", "member" : "spray.json.lenses.BasicRules.appendToSb", "link" : "spray\/json\/lenses\/JsonPathParser$.html#appendToSb(c:Char):org.parboiled.Context[Any]=>Unit", "kind" : "def"}, {"label" : "WhiteSpace", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.WhiteSpace", "link" : "spray\/json\/lenses\/JsonPathParser$.html#WhiteSpace:org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "HexDigit", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.HexDigit", "link" : "spray\/json\/lenses\/JsonPathParser$.html#HexDigit:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Digit", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Digit", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Digit:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Digits", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Digits", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Digits:org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "Integer", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Integer", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Integer:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Exp", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Exp", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Exp:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "Frac", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.Frac", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Frac:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "JsonNumber", "tail" : "(): Rule1[JsNumber]", "member" : "spray.json.lenses.BasicRules.JsonNumber", "link" : "spray\/json\/lenses\/JsonPathParser$.html#JsonNumber:org.parboiled.scala.rules.Rule1[spray.json.JsNumber]", "kind" : "def"}, {"label" : "Unicode", "tail" : "(): Rule1[Int]", "member" : "spray.json.lenses.BasicRules.Unicode", "link" : "spray\/json\/lenses\/JsonPathParser$.html#Unicode:org.parboiled.scala.rules.Rule1[Int]", "kind" : "def"}, {"label" : "NormalChar", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.NormalChar", "link" : "spray\/json\/lenses\/JsonPathParser$.html#NormalChar:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "EscapedChar", "tail" : "(): Rule0", "member" : "spray.json.lenses.BasicRules.EscapedChar", "link" : "spray\/json\/lenses\/JsonPathParser$.html#EscapedChar:org.parboiled.scala.rules.Rule0", "kind" : "def"}, {"label" : "toRule", "tail" : "(symbol: Symbol): Rule0", "member" : "org.parboiled.scala.Parser.toRule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#toRule(symbol:Symbol):org.parboiled.scala.Rule0", "kind" : "implicit def"}, {"label" : "toRule", "tail" : "(chars: Array[Char]): Rule0", "member" : "org.parboiled.scala.Parser.toRule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#toRule(chars:Array[Char]):org.parboiled.scala.Rule0", "kind" : "implicit def"}, {"label" : "toRule", "tail" : "(string: String): Rule0", "member" : "org.parboiled.scala.Parser.toRule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#toRule(string:String):org.parboiled.scala.Rule0", "kind" : "implicit def"}, {"label" : "withContext", "tail" : "(f: (A, B, C, D, E, F, G, Context[Any]) => R): WithContextAction7[A, B, C, D, E, F, G, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,C,D,E,F,G,R](f:(A,B,C,D,E,F,G,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction7[A,B,C,D,E,F,G,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, B, C, D, E, F, Context[Any]) => R): WithContextAction6[A, B, C, D, E, F, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,C,D,E,F,R](f:(A,B,C,D,E,F,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction6[A,B,C,D,E,F,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, B, C, D, E, Context[Any]) => R): WithContextAction5[A, B, C, D, E, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,C,D,E,R](f:(A,B,C,D,E,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction5[A,B,C,D,E,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, B, C, D, Context[Any]) => R): WithContextAction4[A, B, C, D, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,C,D,R](f:(A,B,C,D,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction4[A,B,C,D,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, B, C, Context[Any]) => R): WithContextAction3[A, B, C, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,C,R](f:(A,B,C,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction3[A,B,C,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, B, Context[Any]) => R): WithContextAction2[A, B, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,B,R](f:(A,B,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction2[A,B,R]", "kind" : "def"}, {"label" : "withContext", "tail" : "(f: (A, Context[Any]) => R): WithContextAction1[A, R]", "member" : "org.parboiled.scala.Parser.withContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#withContext[A,R](f:(A,org.parboiled.Context[Any])=>R):org.parboiled.scala.WithContextAction1[A,R]", "kind" : "def"}, {"label" : "pushFromContext", "tail" : "(f: (Context[Any]) => A): Rule1[A]", "member" : "org.parboiled.scala.Parser.pushFromContext", "link" : "spray\/json\/lenses\/JsonPathParser$.html#pushFromContext[A](f:org.parboiled.Context[Any]=>A):org.parboiled.scala.Rule1[A]", "kind" : "def"}, {"label" : "push", "tail" : "(a: => A, b: => B, c: => C): Rule3[A, B, C]", "member" : "org.parboiled.scala.Parser.push", "link" : "spray\/json\/lenses\/JsonPathParser$.html#push[A,B,C](a:=>A,b:=>B,c:=>C):org.parboiled.scala.Rule3[A,B,C]", "kind" : "def"}, {"label" : "push", "tail" : "(a: => A, b: => B): Rule2[A, B]", "member" : "org.parboiled.scala.Parser.push", "link" : "spray\/json\/lenses\/JsonPathParser$.html#push[A,B](a:=>A,b:=>B):org.parboiled.scala.Rule2[A,B]", "kind" : "def"}, {"label" : "push", "tail" : "(f: => A): Rule1[A]", "member" : "org.parboiled.scala.Parser.push", "link" : "spray\/json\/lenses\/JsonPathParser$.html#push[A](f:=>A):org.parboiled.scala.Rule1[A]", "kind" : "def"}, {"label" : "run", "tail" : "(f: => Unit): Rule0", "member" : "org.parboiled.scala.Parser.run", "link" : "spray\/json\/lenses\/JsonPathParser$.html#run(f:=>Unit):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "test", "tail" : "(f: => Boolean): Rule0", "member" : "org.parboiled.scala.Parser.test", "link" : "spray\/json\/lenses\/JsonPathParser$.html#test(f:=>Boolean):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(chars: Array[Char]): Rule0", "member" : "org.parboiled.scala.Parser.ignoreCase", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ignoreCase(chars:Array[Char]):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(chars: Array[Char]): Rule0", "member" : "org.parboiled.scala.Parser.noneOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#noneOf(chars:Array[Char]):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(s: String): Rule0", "member" : "org.parboiled.scala.Parser.noneOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#noneOf(s:String):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: Characters): Rule0", "member" : "org.parboiled.scala.Parser.anyOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#anyOf(chars:org.parboiled.support.Characters):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: Array[Char]): Rule0", "member" : "org.parboiled.scala.Parser.anyOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#anyOf(chars:Array[Char]):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(s: String): Rule0", "member" : "org.parboiled.scala.Parser.anyOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#anyOf(s:String):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "str", "tail" : "(chars: Array[Char]): Rule0", "member" : "org.parboiled.scala.Parser.str", "link" : "spray\/json\/lenses\/JsonPathParser$.html#str(chars:Array[Char]):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "str", "tail" : "(s: String): Rule0", "member" : "org.parboiled.scala.Parser.str", "link" : "spray\/json\/lenses\/JsonPathParser$.html#str(s:String):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "ch", "tail" : "(c: Char): CharRule", "member" : "org.parboiled.scala.Parser.ch", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ch(c:Char):org.parboiled.scala.CharRule", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(s: String): Rule0", "member" : "org.parboiled.scala.Parser.ignoreCase", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ignoreCase(s:String):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(c: Char): Rule0", "member" : "org.parboiled.scala.Parser.ignoreCase", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ignoreCase(c:Char):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule2[A, B], separator: Rule0): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A,B](times:Int,sub:org.parboiled.scala.Rule2[A,B],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule2[A, B]): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A,B](times:Int,sub:org.parboiled.scala.Rule2[A,B]):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule1[A], separator: Rule0): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A](times:Int,sub:org.parboiled.scala.Rule1[A],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule1[A]): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A](times:Int,sub:org.parboiled.scala.Rule1[A]):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: ReductionRule1[A, B], separator: Rule0): ReductionRule1[A, B]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A,B<:A](times:Int,sub:org.parboiled.scala.ReductionRule1[A,B],separator:org.parboiled.scala.Rule0):org.parboiled.scala.ReductionRule1[A,B]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: ReductionRule1[A, B]): ReductionRule1[A, B]", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes[A,B<:A](times:Int,sub:org.parboiled.scala.ReductionRule1[A,B]):org.parboiled.scala.ReductionRule1[A,B]", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule0, separator: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes(times:Int,sub:org.parboiled.scala.Rule0,separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "nTimes", "tail" : "(times: Int, sub: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.nTimes", "link" : "spray\/json\/lenses\/JsonPathParser$.html#nTimes(times:Int,sub:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule2[A, B], separator: Rule0): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore[A,B](sub:org.parboiled.scala.Rule2[A,B],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule1[A], separator: Rule0): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore[A](sub:org.parboiled.scala.Rule1[A],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule0, separator: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore(sub:org.parboiled.scala.Rule0,separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule2[A, B]): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore[A,B](sub:org.parboiled.scala.Rule2[A,B]):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule1[A]): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore[A](sub:org.parboiled.scala.Rule1[A]):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: ReductionRule1[A, B]): ReductionRule1[A, B]", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore[A,B<:A](sub:org.parboiled.scala.ReductionRule1[A,B]):org.parboiled.scala.ReductionRule1[A,B]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(sub: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.oneOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#oneOrMore(sub:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule2[A, B], separator: Rule0): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore[A,B](sub:org.parboiled.scala.Rule2[A,B],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule1[A], separator: Rule0): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore[A](sub:org.parboiled.scala.Rule1[A],separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule0, separator: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore(sub:org.parboiled.scala.Rule0,separator:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule2[A, B]): Rule1[List[(A, B)]]", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore[A,B](sub:org.parboiled.scala.Rule2[A,B]):org.parboiled.scala.Rule1[List[(A,B)]]", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule1[A]): Rule1[List[A]]", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore[A](sub:org.parboiled.scala.Rule1[A]):org.parboiled.scala.Rule1[List[A]]", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: ReductionRule1[A, B]): ReductionRule1[A, B]", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore[A,B<:A](sub:org.parboiled.scala.ReductionRule1[A,B]):org.parboiled.scala.ReductionRule1[A,B]", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(sub: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.zeroOrMore", "link" : "spray\/json\/lenses\/JsonPathParser$.html#zeroOrMore(sub:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "optional", "tail" : "(sub: Rule2[A, B]): Rule1[Option[(A, B)]]", "member" : "org.parboiled.scala.Parser.optional", "link" : "spray\/json\/lenses\/JsonPathParser$.html#optional[A,B](sub:org.parboiled.scala.Rule2[A,B]):org.parboiled.scala.Rule1[Option[(A,B)]]", "kind" : "def"}, {"label" : "optional", "tail" : "(sub: Rule1[A]): Rule1[Option[A]]", "member" : "org.parboiled.scala.Parser.optional", "link" : "spray\/json\/lenses\/JsonPathParser$.html#optional[A](sub:org.parboiled.scala.Rule1[A]):org.parboiled.scala.Rule1[Option[A]]", "kind" : "def"}, {"label" : "optional", "tail" : "(sub: ReductionRule1[A, B]): ReductionRule1[A, B]", "member" : "org.parboiled.scala.Parser.optional", "link" : "spray\/json\/lenses\/JsonPathParser$.html#optional[A,B<:A](sub:org.parboiled.scala.ReductionRule1[A,B]):org.parboiled.scala.ReductionRule1[A,B]", "kind" : "def"}, {"label" : "optional", "tail" : "(sub: Rule0): Rule0", "member" : "org.parboiled.scala.Parser.optional", "link" : "spray\/json\/lenses\/JsonPathParser$.html#optional(sub:org.parboiled.scala.Rule0):org.parboiled.scala.Rule0", "kind" : "def"}, {"label" : "rule", "tail" : "(label: String, options: RuleOption*)(block: => T)(creator: (Matcher) => T): T", "member" : "org.parboiled.scala.Parser.rule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#rule[T<:org.parboiled.scala.Rule](label:String,options:org.parboiled.scala.RuleOption*)(block:=>T)(implicitcreator:org.parboiled.matchers.Matcher=>T):T", "kind" : "def"}, {"label" : "rule", "tail" : "(firstOption: RuleOption, more: RuleOption*)(block: => T)(creator: (Matcher) => T): T", "member" : "org.parboiled.scala.Parser.rule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#rule[T<:org.parboiled.scala.Rule](firstOption:org.parboiled.scala.RuleOption,more:org.parboiled.scala.RuleOption*)(block:=>T)(implicitcreator:org.parboiled.matchers.Matcher=>T):T", "kind" : "def"}, {"label" : "rule", "tail" : "(block: => T)(creator: (Matcher) => T): T", "member" : "org.parboiled.scala.Parser.rule", "link" : "spray\/json\/lenses\/JsonPathParser$.html#rule[T<:org.parboiled.scala.Rule](block:=>T)(implicitcreator:org.parboiled.matchers.Matcher=>T):T", "kind" : "def"}, {"label" : "buildParseTree", "tail" : "(): Boolean", "member" : "org.parboiled.scala.Parser.buildParseTree", "link" : "spray\/json\/lenses\/JsonPathParser$.html#buildParseTree:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/JsonPathParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/JsonPathParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/JsonPathParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/JsonPathParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/JsonPathParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/JsonPathParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/JsonPathParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/JsonPathParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/JsonPathParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/JsonPathParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/JsonPathParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/JsonPathParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/JsonPathParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/JsonPathParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/JsonPathParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/JsonPathParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "spray.json.lenses.Lens", "trait" : "spray\/json\/lenses\/Lens.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Lens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Lens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Lens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Lens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Lens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Lens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Lens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Lens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Lens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Lens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Lens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Lens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Lens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Lens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Lens.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Lens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Lens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Lens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Lens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ops", "tail" : "(): Ops[M]", "member" : "spray.json.lenses.Lens.ops", "link" : "spray\/json\/lenses\/Lens.html#ops:spray.json.lenses.Ops[M]", "kind" : "abstract def"}, {"label" : "toSeq", "tail" : "(): Lens[Seq]", "member" : "spray.json.lenses.Lens.toSeq", "link" : "spray\/json\/lenses\/Lens.html#toSeq:spray.json.lenses.Lens[Seq]", "kind" : "abstract def"}, {"label" : "\/", "tail" : "(next: Lens[M2])(ev: Join[M2, M, R]): Lens[R]", "member" : "spray.json.lenses.Lens.\/", "link" : "spray\/json\/lenses\/Lens.html#\/[M2[_],R[_]](next:spray.json.lenses.Lens[M2])(implicitev:spray.json.lenses.Join[M2,M,R]):spray.json.lenses.Lens[R]", "kind" : "abstract def"}, {"label" : "is", "tail" : "(f: (U) => Boolean)(arg0: Reader[U]): JsPred", "member" : "spray.json.lenses.ReadLens.is", "link" : "spray\/json\/lenses\/Lens.html#is[U](f:U=>Boolean)(implicitevidence$3:spray.json.lenses.Reader[U]):spray.json.lenses.JsPred", "kind" : "abstract def"}, {"label" : "get", "tail" : "(value: JsValue)(arg0: Reader[T]): M[T]", "member" : "spray.json.lenses.ReadLens.get", "link" : "spray\/json\/lenses\/Lens.html#get[T](value:spray.json.JsValue)(implicitevidence$2:spray.json.lenses.Reader[T]):M[T]", "kind" : "abstract def"}, {"label" : "tryGet", "tail" : "(value: JsValue)(arg0: Reader[T]): Validated[M[T]]", "member" : "spray.json.lenses.ReadLens.tryGet", "link" : "spray\/json\/lenses\/Lens.html#tryGet[T](value:spray.json.JsValue)(implicitevidence$1:spray.json.lenses.Reader[T]):spray.json.lenses.Validated[M[T]]", "kind" : "abstract def"}, {"label" : "retr", "tail" : "(): (JsValue) => Validated[M[JsValue]]", "member" : "spray.json.lenses.ReadLens.retr", "link" : "spray\/json\/lenses\/Lens.html#retr:spray.json.JsValue=>spray.json.lenses.Validated[M[spray.json.JsValue]]", "kind" : "abstract def"}, {"label" : "!", "tail" : "(op: Operation): Update", "member" : "spray.json.lenses.UpdateLens.!", "link" : "spray\/json\/lenses\/Lens.html#!(op:spray.json.lenses.Operation):spray.json.lenses.Update", "kind" : "abstract def"}, {"label" : "updated", "tail" : "(f: Operation)(parent: JsValue): SafeJsValue", "member" : "spray.json.lenses.UpdateLens.updated", "link" : "spray\/json\/lenses\/Lens.html#updated(f:spray.json.lenses.Operation)(parent:spray.json.JsValue):spray.json.lenses.SafeJsValue", "kind" : "abstract def"}], "shortDescription" : "A Lens combines read and update functions of UpdateLens and ReadLens intocombinable chunks."}, {"name" : "spray.json.lenses.LensImpl", "shortDescription" : "This implements most of the methods of Lens.", "members_class" : [{"label" : "toSeq", "tail" : "(): Lens[Seq]", "member" : "spray.json.lenses.LensImpl.toSeq", "link" : "spray\/json\/lenses\/LensImpl.html#toSeq:spray.json.lenses.Lens[Seq]", "kind" : "def"}, {"label" : "\/", "tail" : "(next: Lens[M2])(ev: Join[M2, M, R]): Lens[R]", "member" : "spray.json.lenses.LensImpl.\/", "link" : "spray\/json\/lenses\/LensImpl.html#\/[M2[_],R[_]](next:spray.json.lenses.Lens[M2])(implicitev:spray.json.lenses.Join[M2,M,R]):spray.json.lenses.Lens[R]", "kind" : "def"}, {"label" : "is", "tail" : "(f: (U) => Boolean)(arg0: Reader[U]): JsPred", "member" : "spray.json.lenses.LensImpl.is", "link" : "spray\/json\/lenses\/LensImpl.html#is[U](f:U=>Boolean)(implicitevidence$3:spray.json.lenses.Reader[U]):spray.json.lenses.JsPred", "kind" : "def"}, {"label" : "!", "tail" : "(op: Operation): Update", "member" : "spray.json.lenses.LensImpl.!", "link" : "spray\/json\/lenses\/LensImpl.html#!(op:spray.json.lenses.Operation):spray.json.lenses.Update", "kind" : "def"}, {"label" : "get", "tail" : "(p: JsValue)(arg0: Reader[T]): M[T]", "member" : "spray.json.lenses.LensImpl.get", "link" : "spray\/json\/lenses\/LensImpl.html#get[T](p:spray.json.JsValue)(implicitevidence$2:spray.json.lenses.Reader[T]):M[T]", "kind" : "def"}, {"label" : "tryGet", "tail" : "(p: JsValue)(arg0: Reader[T]): Validated[M[T]]", "member" : "spray.json.lenses.LensImpl.tryGet", "link" : "spray\/json\/lenses\/LensImpl.html#tryGet[T](p:spray.json.JsValue)(implicitevidence$1:spray.json.lenses.Reader[T]):spray.json.lenses.Validated[M[T]]", "kind" : "def"}, {"member" : "spray.json.lenses.LensImpl#<init>", "error" : "unsupported entity"}, {"label" : "ops", "tail" : ": Ops[M]", "member" : "spray.json.lenses.LensImpl.ops", "link" : "spray\/json\/lenses\/LensImpl.html#ops:spray.json.lenses.Ops[M]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/LensImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/LensImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/LensImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/LensImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/LensImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/LensImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/LensImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/LensImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/LensImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/LensImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/LensImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/LensImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/LensImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/LensImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/LensImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/LensImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/LensImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/LensImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/LensImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "retr", "tail" : "(): (JsValue) => Validated[M[JsValue]]", "member" : "spray.json.lenses.ReadLens.retr", "link" : "spray\/json\/lenses\/LensImpl.html#retr:spray.json.JsValue=>spray.json.lenses.Validated[M[spray.json.JsValue]]", "kind" : "abstract def"}, {"label" : "updated", "tail" : "(f: Operation)(parent: JsValue): SafeJsValue", "member" : "spray.json.lenses.UpdateLens.updated", "link" : "spray\/json\/lenses\/LensImpl.html#updated(f:spray.json.lenses.Operation)(parent:spray.json.JsValue):spray.json.lenses.SafeJsValue", "kind" : "abstract def"}], "class" : "spray\/json\/lenses\/LensImpl.html", "kind" : "class"}, {"name" : "spray.json.lenses.Operations", "object" : "spray\/json\/lenses\/Operations$.html", "members_object" : [{"label" : "RichJsValue", "tail" : "", "member" : "spray.json.lenses.ExtraImplicits.RichJsValue", "link" : "spray\/json\/lenses\/ExtraImplicits.html#RichJsValueextendsAnyRef", "kind" : "trait"}, {"label" : "MapOperation", "tail" : "", "member" : "spray.json.lenses.Operations.MapOperation", "link" : "spray\/json\/lenses\/Operations.html#MapOperationextendsspray.json.lenses.Operation", "kind" : "trait"}, {"label" : "richString", "tail" : "(str: String): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richString", "link" : "spray\/json\/lenses\/Operations$.html#richString(str:String):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "richValue", "tail" : "(v: JsValue): RichJsValue", "member" : "spray.json.lenses.ExtraImplicits.richValue", "link" : "spray\/json\/lenses\/Operations$.html#richValue(v:spray.json.JsValue):ExtraImplicits.this.RichJsValue", "kind" : "implicit def"}, {"label" : "extract", "tail" : "(value: Lens[M])(f: (M[T]) => Update): Operation", "member" : "spray.json.lenses.Operations.extract", "link" : "spray\/json\/lenses\/Operations$.html#extract[M[_],T](value:spray.json.lenses.Lens[M])(f:M[T]=>spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "update", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.update", "link" : "spray\/json\/lenses\/Operations$.html#update(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "append", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.append", "link" : "spray\/json\/lenses\/Operations$.html#append(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.modify", "link" : "spray\/json\/lenses\/Operations$.html#modify[T](f:T=>T)(implicitevidence$2:spray.json.lenses.Reader[T],implicitevidence$3:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "set", "tail" : "(t: => T)(arg0: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.set", "link" : "spray\/json\/lenses\/Operations$.html#set[T](t:=>T)(implicitevidence$1:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "updateOptionalField", "tail" : "(f: (Option[T]) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.updateOptionalField", "link" : "spray\/json\/lenses\/Operations$.html#updateOptionalField[T](f:Option[T]=>Option[T])(implicitevidence$5:spray.json.lenses.Reader[T],implicitevidence$6:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modifyOrDeleteField", "tail" : "(f: (T) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.modifyOrDeleteField", "link" : "spray\/json\/lenses\/Operations$.html#modifyOrDeleteField[T](f:T=>Option[T])(implicitevidence$3:spray.json.lenses.Reader[T],implicitevidence$4:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "setOrUpdateField", "tail" : "(default: => T)(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.setOrUpdateField", "link" : "spray\/json\/lenses\/Operations$.html#setOrUpdateField[T](default:=>T)(f:T=>T)(implicitevidence$1:spray.json.lenses.Reader[T],implicitevidence$2:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Operations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Operations$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Operations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Operations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Operations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Operations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Operations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Operations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Operations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Operations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Operations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Operations$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Operations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Operations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Operations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Operations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/Operations.html", "kind" : "trait", "members_trait" : [{"label" : "extract", "tail" : "(value: Lens[M])(f: (M[T]) => Update): Operation", "member" : "spray.json.lenses.Operations.extract", "link" : "spray\/json\/lenses\/Operations.html#extract[M[_],T](value:spray.json.lenses.Lens[M])(f:M[T]=>spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "update", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.update", "link" : "spray\/json\/lenses\/Operations.html#update(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "append", "tail" : "(update: Update): Operation", "member" : "spray.json.lenses.Operations.append", "link" : "spray\/json\/lenses\/Operations.html#append(update:spray.json.lenses.Update):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.modify", "link" : "spray\/json\/lenses\/Operations.html#modify[T](f:T=>T)(implicitevidence$2:spray.json.lenses.Reader[T],implicitevidence$3:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "MapOperation", "tail" : "", "member" : "spray.json.lenses.Operations.MapOperation", "link" : "spray\/json\/lenses\/Operations.html#MapOperationextendsspray.json.lenses.Operation", "kind" : "trait"}, {"label" : "set", "tail" : "(t: => T)(arg0: JsonWriter[T]): Operation", "member" : "spray.json.lenses.Operations.set", "link" : "spray\/json\/lenses\/Operations.html#set[T](t:=>T)(implicitevidence$1:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "updateOptionalField", "tail" : "(f: (Option[T]) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.updateOptionalField", "link" : "spray\/json\/lenses\/Operations.html#updateOptionalField[T](f:Option[T]=>Option[T])(implicitevidence$5:spray.json.lenses.Reader[T],implicitevidence$6:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modifyOrDeleteField", "tail" : "(f: (T) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.modifyOrDeleteField", "link" : "spray\/json\/lenses\/Operations.html#modifyOrDeleteField[T](f:T=>Option[T])(implicitevidence$3:spray.json.lenses.Reader[T],implicitevidence$4:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "setOrUpdateField", "tail" : "(default: => T)(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.setOrUpdateField", "link" : "spray\/json\/lenses\/Operations.html#setOrUpdateField[T](default:=>T)(f:T=>T)(implicitevidence$1:spray.json.lenses.Reader[T],implicitevidence$2:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Operations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Operations.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Operations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Operations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Operations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Operations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Operations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Operations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Operations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Operations.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Operations.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Operations.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Operations.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Operations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Operations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Operations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Operations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Defines a set of operations to update Json values."}, {"name" : "spray.json.lenses.Ops", "object" : "spray\/json\/lenses\/Ops$.html", "members_object" : [{"label" : "seqOps", "tail" : "(): Ops[Seq]", "member" : "spray.json.lenses.Ops.seqOps", "link" : "spray\/json\/lenses\/Ops$.html#seqOps:spray.json.lenses.Ops[Seq]", "kind" : "implicit def"}, {"label" : "optionOps", "tail" : "(): Ops[Option]", "member" : "spray.json.lenses.Ops.optionOps", "link" : "spray\/json\/lenses\/Ops$.html#optionOps:spray.json.lenses.Ops[Option]", "kind" : "implicit def"}, {"label" : "idOps", "tail" : "(): Ops[Id]", "member" : "spray.json.lenses.Ops.idOps", "link" : "spray\/json\/lenses\/Ops$.html#idOps:spray.json.lenses.Ops[spray.json.lenses.Id]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Ops$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Ops$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Ops$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Ops$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Ops$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Ops$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Ops$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Ops$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Ops$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Ops$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Ops$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Ops$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Ops$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Ops$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Ops$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Ops$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/Ops.html", "kind" : "trait", "members_trait" : [{"label" : "map", "tail" : "(els: M[T])(f: (T) => U): Seq[U]", "member" : "spray.json.lenses.Ops.map", "link" : "spray\/json\/lenses\/Ops.html#map[T,U](els:M[T])(f:T=>U):Seq[U]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Ops.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Ops.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Ops.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Ops.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Ops.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Ops.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Ops.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Ops.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Ops.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Ops.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/Ops.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Ops.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Ops.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Ops.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Ops.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Ops.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Ops.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(v: Validated[M[T]]): Seq[Validated[T]]", "member" : "spray.json.lenses.Ops.toSeq", "link" : "spray\/json\/lenses\/Ops.html#toSeq[T](v:spray.json.lenses.Validated[M[T]]):Seq[spray.json.lenses.Validated[T]]", "kind" : "abstract def"}, {"label" : "allRight", "tail" : "(v: Seq[Validated[T]]): Validated[M[T]]", "member" : "spray.json.lenses.Ops.allRight", "link" : "spray\/json\/lenses\/Ops.html#allRight[T](v:Seq[spray.json.lenses.Validated[T]]):spray.json.lenses.Validated[M[T]]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(els: M[T])(f: (T) => Seq[U]): Seq[U]", "member" : "spray.json.lenses.Ops.flatMap", "link" : "spray\/json\/lenses\/Ops.html#flatMap[T,U](els:M[T])(f:T=>Seq[U]):Seq[U]", "kind" : "abstract def"}], "shortDescription" : "A trait to define common operations for different container types."}, {"name" : "spray.json.lenses.OptionalFieldOperations", "trait" : "spray\/json\/lenses\/OptionalFieldOperations.html", "kind" : "trait", "members_trait" : [{"label" : "updateOptionalField", "tail" : "(f: (Option[T]) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.updateOptionalField", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#updateOptionalField[T](f:Option[T]=>Option[T])(implicitevidence$5:spray.json.lenses.Reader[T],implicitevidence$6:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "modifyOrDeleteField", "tail" : "(f: (T) => Option[T])(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.modifyOrDeleteField", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#modifyOrDeleteField[T](f:T=>Option[T])(implicitevidence$3:spray.json.lenses.Reader[T],implicitevidence$4:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "setOrUpdateField", "tail" : "(default: => T)(f: (T) => T)(arg0: Reader[T], arg1: JsonWriter[T]): Operation", "member" : "spray.json.lenses.OptionalFieldOperations.setOrUpdateField", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#setOrUpdateField[T](default:=>T)(f:T=>T)(implicitevidence$1:spray.json.lenses.Reader[T],implicitevidence$2:spray.json.JsonWriter[T]):spray.json.lenses.Operation", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/OptionalFieldOperations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.OptionLenses", "object" : "spray\/json\/lenses\/OptionLenses$.html", "members_object" : [{"label" : "FieldMissing", "tail" : ": Left[RuntimeException, Nothing]", "member" : "spray.json.lenses.OptionLenses.FieldMissing", "link" : "spray\/json\/lenses\/OptionLenses$.html#FieldMissing:scala.util.Left[RuntimeException,Nothing]", "kind" : "val"}, {"label" : "optionalField", "tail" : "(name: String): OptLens", "member" : "spray.json.lenses.OptionLenses.optionalField", "link" : "spray\/json\/lenses\/OptionLenses$.html#optionalField(name:String):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "find", "tail" : "(pred: JsPred): OptLens", "member" : "spray.json.lenses.OptionLenses.find", "link" : "spray\/json\/lenses\/OptionLenses$.html#find(pred:spray.json.lenses.JsPred):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/OptionLenses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/OptionLenses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/OptionLenses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/OptionLenses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/OptionLenses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/OptionLenses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/OptionLenses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/OptionLenses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/OptionLenses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/OptionLenses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/OptionLenses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/OptionLenses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/OptionLenses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/OptionLenses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/OptionLenses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/OptionLenses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/OptionLenses.html", "kind" : "trait", "members_trait" : [{"label" : "optionalField", "tail" : "(name: String): OptLens", "member" : "spray.json.lenses.OptionLenses.optionalField", "link" : "spray\/json\/lenses\/OptionLenses.html#optionalField(name:String):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "find", "tail" : "(pred: JsPred): OptLens", "member" : "spray.json.lenses.OptionLenses.find", "link" : "spray\/json\/lenses\/OptionLenses.html#find(pred:spray.json.lenses.JsPred):spray.json.lenses.OptLens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/OptionLenses.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/OptionLenses.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/OptionLenses.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/OptionLenses.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/OptionLenses.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/OptionLenses.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/OptionLenses.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/OptionLenses.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/OptionLenses.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/OptionLenses.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/OptionLenses.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/OptionLenses.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/OptionLenses.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/OptionLenses.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/OptionLenses.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/OptionLenses.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/OptionLenses.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.Reader", "object" : "spray\/json\/lenses\/package$$Reader$.html", "members_object" : [{"label" : "safeMonadicReader", "tail" : "(arg0: JsonReader[T]): Reader[T]", "member" : "spray.json.lenses.Reader.safeMonadicReader", "link" : "spray\/json\/lenses\/package$$Reader$.html#safeMonadicReader[T](implicitevidence$1:spray.json.JsonReader[T]):spray.json.lenses.package.Reader[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/package$$Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/package$$Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/package$$Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/package$$Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/package$$Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/package$$Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/package$$Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/package$$Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/package$$Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/package$$Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/package$$Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/package$$Reader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/package$$Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/package$$Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/package$$Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/package$$Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/package$$Reader.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/package$$Reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/package$$Reader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/package$$Reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/package$$Reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/package$$Reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/package$$Reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/package$$Reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$Reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/package$$Reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/package$$Reader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/package$$Reader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/package$$Reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/package$$Reader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/package$$Reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/package$$Reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/package$$Reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/package$$Reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "read", "tail" : "(js: JsValue): Validated[T]", "member" : "spray.json.lenses.Reader.read", "link" : "spray\/json\/lenses\/package$$Reader.html#read(js:spray.json.JsValue):spray.json.lenses.package.Validated[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.ReadLens", "trait" : "spray\/json\/lenses\/ReadLens.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/ReadLens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/ReadLens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/ReadLens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/ReadLens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/ReadLens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/ReadLens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/ReadLens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ReadLens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ReadLens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ReadLens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/ReadLens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/ReadLens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/ReadLens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/ReadLens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/ReadLens.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/ReadLens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/ReadLens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/ReadLens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/ReadLens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "is", "tail" : "(f: (U) => Boolean)(arg0: Reader[U]): JsPred", "member" : "spray.json.lenses.ReadLens.is", "link" : "spray\/json\/lenses\/ReadLens.html#is[U](f:U=>Boolean)(implicitevidence$3:spray.json.lenses.Reader[U]):spray.json.lenses.JsPred", "kind" : "abstract def"}, {"label" : "get", "tail" : "(value: JsValue)(arg0: Reader[T]): M[T]", "member" : "spray.json.lenses.ReadLens.get", "link" : "spray\/json\/lenses\/ReadLens.html#get[T](value:spray.json.JsValue)(implicitevidence$2:spray.json.lenses.Reader[T]):M[T]", "kind" : "abstract def"}, {"label" : "tryGet", "tail" : "(value: JsValue)(arg0: Reader[T]): Validated[M[T]]", "member" : "spray.json.lenses.ReadLens.tryGet", "link" : "spray\/json\/lenses\/ReadLens.html#tryGet[T](value:spray.json.JsValue)(implicitevidence$1:spray.json.lenses.Reader[T]):spray.json.lenses.Validated[M[T]]", "kind" : "abstract def"}, {"label" : "retr", "tail" : "(): (JsValue) => Validated[M[JsValue]]", "member" : "spray.json.lenses.ReadLens.retr", "link" : "spray\/json\/lenses\/ReadLens.html#retr:spray.json.JsValue=>spray.json.lenses.Validated[M[spray.json.JsValue]]", "kind" : "abstract def"}], "shortDescription" : "The read lens can extract child values out of a JsValue hierarchy."}, {"name" : "spray.json.lenses.ScalarLenses", "object" : "spray\/json\/lenses\/ScalarLenses$.html", "members_object" : [{"label" : "arrayOrSingletonAsArray", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.arrayOrSingletonAsArray", "link" : "spray\/json\/lenses\/ScalarLenses$.html#arrayOrSingletonAsArray:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "value", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.value", "link" : "spray\/json\/lenses\/ScalarLenses$.html#value:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "element", "tail" : "(idx: Int): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.element", "link" : "spray\/json\/lenses\/ScalarLenses$.html#element(idx:Int):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "field", "tail" : "(name: String): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.field", "link" : "spray\/json\/lenses\/ScalarLenses$.html#field(name:String):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/ScalarLenses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/ScalarLenses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/ScalarLenses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/ScalarLenses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/ScalarLenses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/ScalarLenses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/ScalarLenses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/ScalarLenses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/ScalarLenses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/ScalarLenses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/ScalarLenses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/ScalarLenses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/ScalarLenses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/ScalarLenses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/ScalarLenses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/ScalarLenses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/ScalarLenses.html", "kind" : "trait", "members_trait" : [{"label" : "arrayOrSingletonAsArray", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.arrayOrSingletonAsArray", "link" : "spray\/json\/lenses\/ScalarLenses.html#arrayOrSingletonAsArray:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "value", "tail" : ": ScalarLens", "member" : "spray.json.lenses.ScalarLenses.value", "link" : "spray\/json\/lenses\/ScalarLenses.html#value:spray.json.lenses.ScalarLens", "kind" : "val"}, {"label" : "element", "tail" : "(idx: Int): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.element", "link" : "spray\/json\/lenses\/ScalarLenses.html#element(idx:Int):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "field", "tail" : "(name: String): ScalarLens", "member" : "spray.json.lenses.ScalarLenses.field", "link" : "spray\/json\/lenses\/ScalarLenses.html#field(name:String):spray.json.lenses.ScalarLens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/ScalarLenses.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/ScalarLenses.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/ScalarLenses.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/ScalarLenses.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/ScalarLenses.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/ScalarLenses.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/ScalarLenses.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/ScalarLenses.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/ScalarLenses.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/ScalarLenses.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/ScalarLenses.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/ScalarLenses.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/ScalarLenses.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/ScalarLenses.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/ScalarLenses.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/ScalarLenses.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/ScalarLenses.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.SeqLenses", "object" : "spray\/json\/lenses\/SeqLenses$.html", "members_object" : [{"label" : "filter", "tail" : "(pred: JsPred): SeqLens", "member" : "spray.json.lenses.SeqLenses.filter", "link" : "spray\/json\/lenses\/SeqLenses$.html#filter(pred:spray.json.lenses.JsPred):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "*", "tail" : "(): SeqLens", "member" : "spray.json.lenses.SeqLenses.*", "link" : "spray\/json\/lenses\/SeqLenses$.html#*:spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "allMatching", "tail" : "(inner: Lens[M]): SeqLens", "member" : "spray.json.lenses.SeqLenses.allMatching", "link" : "spray\/json\/lenses\/SeqLenses$.html#allMatching[M[_]](inner:spray.json.lenses.Lens[M]):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.elements", "link" : "spray\/json\/lenses\/SeqLenses$.html#elements:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "asSeq", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.asSeq", "link" : "spray\/json\/lenses\/SeqLenses$.html#asSeq:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/SeqLenses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/SeqLenses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/SeqLenses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/SeqLenses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/SeqLenses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/SeqLenses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/SeqLenses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/SeqLenses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/SeqLenses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/SeqLenses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/SeqLenses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/SeqLenses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/SeqLenses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/SeqLenses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/SeqLenses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/SeqLenses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "spray\/json\/lenses\/SeqLenses.html", "kind" : "trait", "members_trait" : [{"label" : "filter", "tail" : "(pred: JsPred): SeqLens", "member" : "spray.json.lenses.SeqLenses.filter", "link" : "spray\/json\/lenses\/SeqLenses.html#filter(pred:spray.json.lenses.JsPred):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "*", "tail" : "(): SeqLens", "member" : "spray.json.lenses.SeqLenses.*", "link" : "spray\/json\/lenses\/SeqLenses.html#*:spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "allMatching", "tail" : "(inner: Lens[M]): SeqLens", "member" : "spray.json.lenses.SeqLenses.allMatching", "link" : "spray\/json\/lenses\/SeqLenses.html#allMatching[M[_]](inner:spray.json.lenses.Lens[M]):spray.json.lenses.SeqLens", "kind" : "def"}, {"label" : "elements", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.elements", "link" : "spray\/json\/lenses\/SeqLenses.html#elements:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "asSeq", "tail" : ": SeqLens", "member" : "spray.json.lenses.SeqLenses.asSeq", "link" : "spray\/json\/lenses\/SeqLenses.html#asSeq:spray.json.lenses.SeqLens", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/SeqLenses.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/SeqLenses.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/SeqLenses.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/SeqLenses.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/SeqLenses.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/SeqLenses.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/SeqLenses.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/SeqLenses.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/SeqLenses.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/SeqLenses.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/SeqLenses.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/SeqLenses.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/SeqLenses.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/SeqLenses.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/SeqLenses.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/SeqLenses.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/SeqLenses.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.Update", "trait" : "spray\/json\/lenses\/Update.html", "kind" : "trait", "members_trait" : [{"label" : "&&", "tail" : "(next: Update): Update", "member" : "spray.json.lenses.Update.&&", "link" : "spray\/json\/lenses\/Update.html#&&(next:spray.json.lenses.Update):spray.json.lenses.Update", "kind" : "def"}, {"label" : "apply", "tail" : "(jsonString: String): String", "member" : "spray.json.lenses.Update.apply", "link" : "spray\/json\/lenses\/Update.html#apply(jsonString:String):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "spray\/json\/lenses\/Update.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (JsValue) => A): (JsValue) => A", "member" : "scala.Function1.andThen", "link" : "spray\/json\/lenses\/Update.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => JsValue): (A) => JsValue", "member" : "scala.Function1.compose", "link" : "spray\/json\/lenses\/Update.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/Update.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/Update.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/Update.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/Update.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/Update.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/Update.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/Update.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Update.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Update.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/Update.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/Update.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/Update.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/Update.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/Update.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/Update.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/Update.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/Update.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/Update.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(value: JsValue): JsValue", "member" : "spray.json.lenses.Update.apply", "link" : "spray\/json\/lenses\/Update.html#apply(value:spray.json.JsValue):spray.json.JsValue", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "spray.json.lenses.UpdateLens", "trait" : "spray\/json\/lenses\/UpdateLens.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/UpdateLens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/UpdateLens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/UpdateLens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/UpdateLens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/UpdateLens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/UpdateLens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/UpdateLens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/UpdateLens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/UpdateLens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/UpdateLens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/UpdateLens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/UpdateLens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "spray\/json\/lenses\/UpdateLens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/UpdateLens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "spray\/json\/lenses\/UpdateLens.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "spray\/json\/lenses\/UpdateLens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/UpdateLens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/UpdateLens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/UpdateLens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!", "tail" : "(op: Operation): Update", "member" : "spray.json.lenses.UpdateLens.!", "link" : "spray\/json\/lenses\/UpdateLens.html#!(op:spray.json.lenses.Operation):spray.json.lenses.Update", "kind" : "abstract def"}, {"label" : "updated", "tail" : "(f: Operation)(parent: JsValue): SafeJsValue", "member" : "spray.json.lenses.UpdateLens.updated", "link" : "spray\/json\/lenses\/UpdateLens.html#updated(f:spray.json.lenses.Operation)(parent:spray.json.JsValue):spray.json.lenses.SafeJsValue", "kind" : "abstract def"}], "shortDescription" : "The UpdateLens is the central interface for updating a child element somewheredeep down a hierarchy of a JsValue."}, {"name" : "spray.json.lenses.ValidateOption", "shortDescription" : "", "members_case class" : [{"label" : "getOrError", "tail" : "(message: => String): Validated[T]", "member" : "spray.json.lenses.ValidateOption.getOrError", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#getOrError(message:=>String):spray.json.lenses.package.Validated[T]", "kind" : "def"}, {"member" : "spray.json.lenses.ValidateOption#<init>", "error" : "unsupported entity"}, {"label" : "option", "tail" : ": Option[T]", "member" : "spray.json.lenses.ValidateOption.option", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#option:Option[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "spray\/json\/lenses\/package$$ValidateOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "spray\/json\/lenses\/package$$ValidateOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "spray\/json\/lenses\/package$$ValidateOption.html", "kind" : "case class"}]};